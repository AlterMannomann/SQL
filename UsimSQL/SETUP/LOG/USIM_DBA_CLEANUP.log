SQL> -- get system information roughly formatted
SQL> @@../UTIL/SYSTEM_INFO.sql
SQL> SELECT TO_CHAR(SYSDATE, 'DD.MM.YYYY HH24:MI:SS') AS exec_date
  2       , SUBSTR(SYS_CONTEXT('USERENV', 'DB_NAME'), 1, 30) AS db_name
  3       , SUBSTR(SYS_CONTEXT('USERENV', 'CURRENT_SCHEMA'), 1, 30) AS db_schema
  4       , SUBSTR(SYS_CONTEXT('USERENV', 'OS_USER'), 1, 60) AS os_user
  5    FROM dual
  6  ;

EXEC_DATE           DB_NAME                        DB_SCHEMA                      OS_USER
------------------- ------------------------------ ------------------------------ ------------------------------------------------------------
31.05.2024 18:00:41 FREEPDB1                       SYS                            Adi

1 Zeile ausgewählt.

SQL>
SQL> -- DROP PUBLIC SYNONYMS
SQL> SELECT 'DROP USIM related public synonyms' AS info FROM dual;

INFO
---------------------------------
DROP USIM related public synonyms

1 Zeile ausgewählt.

SQL> SELECT CASE
  2           WHEN COUNT(*) = 6
  3           THEN 'DROP_USIM_PUBLIC_SYNONYMS.sql'
  4           WHEN COUNT(*) = 0
  5           THEN '../UTIL/NOTHING_TO_DO.sql "Public synonyms do not exists."'
  6           ELSE '../UTIL/EXIT_SCRIPT_WITH_ERROR.sql "Setup failed remove public synonyms manually."'
  7         END AS SCRIPTFILE
  8    FROM dba_objects
  9   WHERE owner        = 'PUBLIC'
 10     AND object_type  = 'SYNONYM'
 11     AND object_name IN ('USIM_INSTALL_STATE', 'USIM_RUN_SCRIPT', 'USIM_RUN_RECREATE', 'USIM_RUN_TEST', 'USIM_RUN_TESTDATA', 'USIM_LOAD_LOG')
 12  ;

SCRIPTFILE
----------------------------------------------------------------------------------
DROP_USIM_PUBLIC_SYNONYMS.sql

1 Zeile ausgewählt.

SQL> @@&SCRIPTFILE
SQL> DROP PUBLIC SYNONYM usim_install_state;

SYNONYM USIM_INSTALL_STATE gelöscht.

SQL> DROP PUBLIC SYNONYM usim_run_script;

SYNONYM USIM_RUN_SCRIPT gelöscht.

SQL> DROP PUBLIC SYNONYM usim_run_recreate;

SYNONYM USIM_RUN_RECREATE gelöscht.

SQL> DROP PUBLIC SYNONYM usim_run_test;

SYNONYM USIM_RUN_TEST gelöscht.

SQL> DROP PUBLIC SYNONYM usim_run_testdata;

SYNONYM USIM_RUN_TESTDATA gelöscht.

SQL> DROP PUBLIC SYNONYM usim_load_log;

SYNONYM USIM_LOAD_LOG gelöscht.

SQL> -- DROP VIEWS
SQL> SELECT 'DROP USIM related views' AS info FROM dual;

INFO
-----------------------
DROP USIM related views

1 Zeile ausgewählt.

SQL> SELECT CASE
  2           WHEN COUNT(*) = 1
  3           THEN '../VIEW/DROP/DROP_USIM_INSTALL_STATE.sql'
  4           ELSE '../UTIL/NOTHING_TO_DO.sql "View USIM_INSTALL_STATE does not exists."'
  5         END AS SCRIPTFILE
  6    FROM dba_objects
  7   WHERE object_name = 'USIM_INSTALL_STATE'
  8     AND object_type = 'VIEW'
  9  ;

SCRIPTFILE
--------------------------------------------------------------------
../VIEW/DROP/DROP_USIM_INSTALL_STATE.sql

1 Zeile ausgewählt.

SQL> @@&SCRIPTFILE
SQL> DROP VIEW usim_install_state;

View USIM_INSTALL_STATE gelöscht.

SQL> -- DROP USERS
SQL> SELECT 'DROP USIM Users' AS info FROM dual;

INFO
---------------
DROP USIM Users

1 Zeile ausgewählt.

SQL> -- USIM_TEST
SQL> SELECT CASE
  2           WHEN COUNT(*) > 0
  3           THEN 'USIM_DROP_TESTUSER.sql'
  4           ELSE '../UTIL/NOTHING_TO_DO.sql "User USIM_TEST does not exist."'
  5         END AS SCRIPTFILE
  6    FROM dba_users
  7   WHERE username = 'USIM_TEST'
  8  ;

SCRIPTFILE
----------------------------------------------------------
USIM_DROP_TESTUSER.sql

1 Zeile ausgewählt.

SQL> @@&SCRIPTFILE
SQL> DROP USER usim_test CASCADE;

User USIM_TEST gelöscht.

SQL> -- USIM
SQL> SELECT CASE
  2           WHEN COUNT(*) > 0
  3           THEN 'USIM_DROP_USER.sql'
  4           ELSE '../UTIL/NOTHING_TO_DO.sql "User USIM does not exist."'
  5         END AS SCRIPTFILE
  6    FROM dba_users
  7   WHERE username = 'USIM'
  8  ;

SCRIPTFILE
-----------------------------------------------------
USIM_DROP_USER.sql

1 Zeile ausgewählt.

SQL> @@&SCRIPTFILE
SQL> DROP USER usim CASCADE;

User USIM gelöscht.

SQL> -- DROP TABLESPACES
SQL> SELECT 'DROP USIM Tablespaces' AS info FROM dual;

INFO
---------------------
DROP USIM Tablespaces

1 Zeile ausgewählt.

SQL> -- USIM_TEST
SQL> SELECT CASE
  2           WHEN COUNT(*) > 0
  3           THEN 'USIM_DROP_TEST_TBL_SPC.sql'
  4           ELSE '../UTIL/NOTHING_TO_DO.sql "Tablespace USIM_TEST does not exist."'
  5         END AS SCRIPTFILE
  6    FROM dba_tablespaces
  7   WHERE tablespace_name = 'USIM_TEST'
  8  ;

SCRIPTFILE
----------------------------------------------------------------
USIM_DROP_TEST_TBL_SPC.sql

1 Zeile ausgewählt.

SQL> @@&SCRIPTFILE
SQL> DROP TABLESPACE usim_test
  2    INCLUDING CONTENTS AND DATAFILES
  3    CASCADE CONSTRAINTS
  4  ;

TABLESPACE USIM_TEST gelöscht.

SQL> -- USIM_LIVE
SQL> SELECT CASE
  2           WHEN COUNT(*) > 0
  3           THEN 'USIM_DROP_TBL_SPC.sql'
  4           ELSE '../UTIL/NOTHING_TO_DO.sql "Tablespace USIM_LIVE does not exist."'
  5         END AS SCRIPTFILE
  6    FROM dba_tablespaces
  7   WHERE tablespace_name = 'USIM_LIVE'
  8  ;

SCRIPTFILE
----------------------------------------------------------------
USIM_DROP_TBL_SPC.sql

1 Zeile ausgewählt.

SQL> @@&SCRIPTFILE
SQL> DROP TABLESPACE usim_live
  2    INCLUDING CONTENTS AND DATAFILES
  3    CASCADE CONSTRAINTS
  4  ;

TABLESPACE USIM_LIVE gelöscht.

SQL> -- DROP FUNCTIONS
SQL> SELECT 'DROP USIM related functions' AS info FROM dual;

INFO
---------------------------
DROP USIM related functions

1 Zeile ausgewählt.

SQL> SELECT CASE
  2           WHEN COUNT(*) = 1
  3           THEN '../FUNCTIONS/DROP/DROP_USIM_LOAD_LOG.sql'
  4           ELSE '../UTIL/NOTHING_TO_DO.sql "USIM_LOAD_LOG function does not exists."'
  5         END AS SCRIPTFILE
  6    FROM dba_objects
  7   WHERE object_name LIKE 'USIM_LOAD_LOG'
  8     AND object_type = 'FUNCTION'
  9  ;

SCRIPTFILE
-------------------------------------------------------------------
../FUNCTIONS/DROP/DROP_USIM_LOAD_LOG.sql

1 Zeile ausgewählt.

SQL> @@&SCRIPTFILE
SQL> DROP FUNCTION usim_load_log;

Function USIM_LOAD_LOG gelöscht.

SQL> SELECT CASE
  2           WHEN COUNT(*) = 1
  3           THEN '../FUNCTIONS/DROP/DROP_USIM_FILETYPE.sql'
  4           ELSE '../UTIL/NOTHING_TO_DO.sql "USIM_FILETYPE function does not exists."'
  5         END AS SCRIPTFILE
  6    FROM dba_objects
  7   WHERE object_name LIKE 'USIM_FILETYPE'
  8     AND object_type = 'FUNCTION'
  9  ;

SCRIPTFILE
-------------------------------------------------------------------
../FUNCTIONS/DROP/DROP_USIM_FILETYPE.sql

1 Zeile ausgewählt.

SQL> @@&SCRIPTFILE
SQL> DROP FUNCTION usim_filetype;

Function USIM_FILETYPE gelöscht.

SQL> -- DROP PROCEDURES
SQL> SELECT 'DROP USIM related procedures' AS info FROM dual;

INFO
----------------------------
DROP USIM related procedures

1 Zeile ausgewählt.

SQL> SELECT CASE
  2           WHEN COUNT(*) = 1
  3           THEN '../PROCEDURES/DROP/DROP_USIM_RUN_SCRIPT.sql'
  4           ELSE '../UTIL/NOTHING_TO_DO.sql "USIM_RUN_SCRIPT procedure does not exists."'
  5         END AS SCRIPTFILE
  6    FROM dba_objects
  7   WHERE object_name LIKE 'USIM_RUN_SCRIPT'
  8     AND object_type = 'PROCEDURE'
  9  ;

SCRIPTFILE
----------------------------------------------------------------------
../PROCEDURES/DROP/DROP_USIM_RUN_SCRIPT.sql

1 Zeile ausgewählt.

SQL> @@&SCRIPTFILE
SQL> DROP PROCEDURE usim_run_script;

Procedure USIM_RUN_SCRIPT gelöscht.

SQL> SELECT CASE
  2           WHEN COUNT(*) = 1
  3           THEN '../PROCEDURES/DROP/DROP_USIM_RUN_RECREATE.sql'
  4           ELSE '../UTIL/NOTHING_TO_DO.sql "USIM_RUN_RECREATE procedure does not exists."'
  5         END AS SCRIPTFILE
  6    FROM dba_objects
  7   WHERE object_name LIKE 'USIM_RUN_RECREATE'
  8     AND object_type = 'PROCEDURE'
  9  ;

SCRIPTFILE
------------------------------------------------------------------------
../PROCEDURES/DROP/DROP_USIM_RUN_RECREATE.sql

1 Zeile ausgewählt.

SQL> @@&SCRIPTFILE
SQL> DROP PROCEDURE usim_run_recreate;

Procedure USIM_RUN_RECREATE gelöscht.

SQL> SELECT CASE
  2           WHEN COUNT(*) = 1
  3           THEN '../PROCEDURES/DROP/DROP_USIM_RUN_TEST.sql'
  4           ELSE '../UTIL/NOTHING_TO_DO.sql "USIM_RUN_TEST procedure does not exists."'
  5         END AS SCRIPTFILE
  6    FROM dba_objects
  7   WHERE object_name LIKE 'USIM_RUN_TEST'
  8     AND object_type = 'PROCEDURE'
  9  ;

SCRIPTFILE
--------------------------------------------------------------------
../PROCEDURES/DROP/DROP_USIM_RUN_TEST.sql

1 Zeile ausgewählt.

SQL> @@&SCRIPTFILE
SQL> DROP PROCEDURE usim_run_test;

Procedure USIM_RUN_TEST gelöscht.

SQL> SELECT CASE
  2           WHEN COUNT(*) = 1
  3           THEN '../PROCEDURES/DROP/DROP_USIM_RUN_TESTDATA.sql'
  4           ELSE '../UTIL/NOTHING_TO_DO.sql "USIM_RUN_TESTDATA procedure does not exists."'
  5         END AS SCRIPTFILE
  6    FROM dba_objects
  7   WHERE object_name LIKE 'USIM_RUN_TESTDATA'
  8     AND object_type = 'PROCEDURE'
  9  ;

SCRIPTFILE
------------------------------------------------------------------------
../PROCEDURES/DROP/DROP_USIM_RUN_TESTDATA.sql

1 Zeile ausgewählt.

SQL> @@&SCRIPTFILE
SQL> DROP PROCEDURE usim_run_testdata;

Procedure USIM_RUN_TESTDATA gelöscht.

SQL> -- DROP JOBS AND PROGRAMS
SQL> SELECT 'DROP USIM related jobs and programs' AS info FROM dual;

INFO
-----------------------------------
DROP USIM related jobs and programs

1 Zeile ausgewählt.

SQL> SELECT CASE
  2           WHEN COUNT(*) > 0
  3           THEN 'USIM_DROP_JOBS.sql'
  4           ELSE '../UTIL/NOTHING_TO_DO.sql "Jobs USIM_RUN_SERVER_SQL, USIM_RUN_SERVER_SQL_TEST, USIM_RUN_SQL or USIM_RUN_SQL_TEST do not exist."'
  5         END AS SCRIPTFILE
  6    FROM dba_objects
  7   WHERE object_name IN ('USIM_RUN_SERVER_SQL', 'USIM_RUN_SERVER_SQL_TEST', 'USIM_RUN_SQL', 'USIM_RUN_SQL_TEST')
  8     AND owner = USER
  9  ;

SCRIPTFILE
-------------------------------------------------------------------------------------------------------------------------------
USIM_DROP_JOBS.sql

1 Zeile ausgewählt.

SQL> @@&SCRIPTFILE
SQL> -- drop sys jobs for usim
SQL> DECLARE
  2    l_result INTEGER;
  3  BEGIN
  4    SELECT COUNT(*)
  5      INTO l_result
  6      FROM dba_objects
  7     WHERE object_name = 'USIM_RUN_SERVER_SQL'
  8       AND object_type = 'JOB'
  9       AND owner = USER
 10    ;
 11    IF l_result = 1
 12    THEN
 13      DBMS_SCHEDULER.DROP_JOB('USIM_RUN_SERVER_SQL', TRUE);
 14    END IF;
 15    SELECT COUNT(*)
 16      INTO l_result
 17      FROM dba_objects
 18     WHERE object_name = 'USIM_RUN_SQL'
 19       AND object_type = 'PROGRAM'
 20       AND owner = USER
 21    ;
 22    IF l_result = 1
 23    THEN
 24      DBMS_SCHEDULER.DROP_PROGRAM('USIM_RUN_SQL', TRUE);
 25    END IF;
 26    SELECT COUNT(*)
 27      INTO l_result
 28      FROM dba_objects
 29     WHERE object_name = 'USIM_RUN_SERVER_SQL_TEST'
 30       AND object_type = 'JOB'
 31       AND owner = USER
 32    ;
 33    IF l_result = 1
 34    THEN
 35      DBMS_SCHEDULER.DROP_JOB('USIM_RUN_SERVER_SQL_TEST', TRUE);
 36    END IF;
 37    SELECT COUNT(*)
 38      INTO l_result
 39      FROM dba_objects
 40     WHERE object_name = 'USIM_RUN_SQL_TEST'
 41       AND object_type = 'PROGRAM'
 42       AND owner = USER
 43    ;
 44    IF l_result = 1
 45    THEN
 46      DBMS_SCHEDULER.DROP_PROGRAM('USIM_RUN_SQL_TEST', TRUE);
 47    END IF;
 48    -- job class also
 49    SELECT COUNT(*)
 50      INTO l_result
 51      FROM dba_scheduler_job_classes
 52     WHERE job_class_name = 'USIM_JOBS'
 53    ;
 54    IF l_result = 1
 55    THEN
 56      DBMS_SCHEDULER.DROP_JOB_CLASS(job_class_name => 'USIM_JOBS');
 57    END IF;
 58  END;
 59  /
PL/SQL-Prozedur erfolgreich abgeschlossen.
SQL> -- DROP CREDENTIALS
SQL> SELECT 'DROP USIM related credentials' AS info FROM dual;

INFO
-----------------------------
DROP USIM related credentials

1 Zeile ausgewählt.

SQL> SELECT CASE
  2           WHEN COUNT(*) > 0
  3           THEN 'USIM_DROP_CREDENTIALS.sql'
  4           ELSE '../UTIL/NOTHING_TO_DO.sql "Credentials USIM_OS_ACCESS, USIM_DB_ACCESS and USIM_DB_ACCESS_TEST does not exists."'
  5         END AS SCRIPTFILE
  6    FROM dba_credentials
  7   WHERE owner = USER
  8     AND credential_name IN ('USIM_OS_ACCESS', 'USIM_DB_ACCESS', 'USIM_DB_ACCESS_TEST')
  9  ;

SCRIPTFILE
---------------------------------------------------------------------------------------------------------------
USIM_DROP_CREDENTIALS.sql

1 Zeile ausgewählt.

SQL> @@&SCRIPTFILE
SQL> DECLARE
  2    l_result INTEGER;
  3  BEGIN
  4    SELECT COUNT(*)
  5      INTO l_result
  6      FROM dba_credentials
  7     WHERE owner = USER
  8       AND credential_name = 'USIM_OS_ACCESS'
  9    ;
 10    IF l_result = 1
 11    THEN
 12      DBMS_CREDENTIAL.DROP_CREDENTIAL('USIM_OS_ACCESS', TRUE);
 13    END IF;
 14    SELECT COUNT(*)
 15      INTO l_result
 16      FROM dba_credentials
 17     WHERE owner = USER
 18       AND credential_name = 'USIM_DB_ACCESS'
 19    ;
 20    IF l_result = 1
 21    THEN
 22      DBMS_CREDENTIAL.DROP_CREDENTIAL('USIM_DB_ACCESS', TRUE);
 23    END IF;
 24    SELECT COUNT(*)
 25      INTO l_result
 26      FROM dba_credentials
 27     WHERE owner = USER
 28       AND credential_name = 'USIM_DB_ACCESS_TEST'
 29    ;
 30    IF l_result = 1
 31    THEN
 32      DBMS_CREDENTIAL.DROP_CREDENTIAL('USIM_DB_ACCESS_TEST', TRUE);
 33    END IF;
 34  END;
 35  /
PL/SQL-Prozedur erfolgreich abgeschlossen.
SQL> -- DROP DIRECTORIES
SQL> SELECT 'DROP USIM related directories' AS info FROM dual;

INFO
-----------------------------
DROP USIM related directories

1 Zeile ausgewählt.

SQL> SELECT CASE
  2           WHEN COUNT(*) = 4
  3           THEN 'USIM_DROP_DIRECTORIES.sql'
  4           WHEN COUNT(*) = 0
  5           THEN '../UTIL/NOTHING_TO_DO.sql "Directories USIM_DIR, USIM_HIST_DIR and USIM_SCRIPT_DIR do not exists."'
  6           ELSE '../UTIL/EXIT_SCRIPT_WITH_ERROR.sql "Cleanup failed remove directories manually before."'
  7         END AS SCRIPTFILE
  8    FROM dba_directories
  9   WHERE directory_name IN ('USIM_DIR', 'USIM_HIST_DIR', 'USIM_SCRIPT_DIR', 'USIM_LOG_DIR')
 10  ;

SCRIPTFILE
--------------------------------------------------------------------------------------------------
USIM_DROP_DIRECTORIES.sql

1 Zeile ausgewählt.

SQL> @@&SCRIPTFILE
SQL> -- one may fail if not all directories are present
SQL> DROP DIRECTORY usim_dir;

Directory USIM_DIR gelöscht.

SQL> DROP DIRECTORY usim_hist_dir;

Directory USIM_HIST_DIR gelöscht.

SQL> DROP DIRECTORY usim_script_dir;

Directory USIM_SCRIPT_DIR gelöscht.

SQL> DROP DIRECTORY usim_log_dir;

Directory USIM_LOG_DIR gelöscht.

SQL> SELECT owner, object_name, object_type, status FROM dba_objects WHERE status != 'VALID';

0 Zeilen ausgewählt.

SQL> SELECT object_type, status, object_name, owner FROM dba_objects WHERE object_name LIKE 'USIM%';

0 Zeilen ausgewählt.

SQL> SPOOL OFF
