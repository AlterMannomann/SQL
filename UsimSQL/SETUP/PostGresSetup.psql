/* Execute with user postgres for initial setup*/
-- default password for all
-- ALTER USER postgres WITH PASSWORD 'usim';
-- for logging in unix log in as postgres (e.g. sudo su postgres) and execute
-- sudo su -c "psql -f /usim_src/SETUP/PostGresSetup.psql 2>&1 | tee /usim_src/SETUP/LOG/PostGreSetup.log" postgres
-- drop objects before
DROP DATABASE IF EXISTS usim;
DROP ROLE IF EXISTS usim;
DROP TABLESPACE IF EXISTS usim_data;
-- create tablespaces
-- Tablespace: usim_data
CREATE TABLESPACE usim_data LOCATION '/usim_data';
COMMENT ON TABLESPACE usim_data IS 'Tablespace containing all USim related data';
-- create roles
-- Role: usim
CREATE ROLE usim WITH
  LOGIN
  NOSUPERUSER
  INHERIT
  CREATEDB
  CREATEROLE
  NOREPLICATION
  NOBYPASSRLS;
ALTER ROLE usim WITH PASSWORD 'usim';
COMMENT ON ROLE usim IS 'Main role for USim';

-- list users
\du
-- databases
-- Database: usim
CREATE DATABASE usim
    WITH
    OWNER = usim
    ENCODING = 'UTF8'
    LC_COLLATE = 'en_US.UTF-8'
    LC_CTYPE = 'en_US.UTF-8'
    LOCALE_PROVIDER = 'libc'
    TABLESPACE = usim_data
    CONNECTION LIMIT = -1
    IS_TEMPLATE = False;
COMMENT ON DATABASE usim IS 'Main database for USim';
-- list databases
\l
-- connect to database usim
\c usim
-- create the schemas and grant to user usim
CREATE SCHEMA usim;
ALTER SCHEMA usim
    OWNER TO usim;
CREATE SCHEMA usim_test;
ALTER SCHEMA usim_test
    OWNER TO usim;
-- create an object view on postgres
DROP VIEW IF EXISTS pg_objects;
CREATE OR REPLACE VIEW pg_objects
AS
SELECT pg_proc.proname AS obj_name
     , pg_namespace.nspname AS obj_schema
     , pg_user.usename AS obj_owner
     , CASE
         WHEN pg_proc.prokind = 'f'
         THEN 'FUNCTION'
         WHEN pg_proc.prokind = 'p'
         THEN 'PROCEDURE'
         WHEN pg_proc.prokind = 'a'
         THEN 'AGGREGATE FUNCTION'
         WHEN pg_proc.prokind = 'w'
         THEN 'WINDOW FUNCTION'
         ELSE 'UNKNOWN OBJECT TYPE'
       END AS obj_type
  FROM pg_proc
  LEFT JOIN pg_namespace
    ON pg_proc.pronamespace = pg_namespace.oid
  LEFT JOIN pg_user
    ON pg_proc.proowner = pg_user.usesysid
 UNION ALL
SELECT tablename AS obj_name
     , schemaname AS obj_schema
     , tableowner AS obj_owner
     , 'TABLE' AS obj_type
  FROM pg_tables
 UNION ALL
SELECT viewname AS obj_name
     , schemaname AS obj_schema
     , viewowner AS obj_owner
     , 'VIEW' AS obj_type
  FROM pg_views
 UNION ALL
SELECT sequencename AS obj_name
     , schemaname AS obj_schema
     , sequenceowner AS obj_owner
     , 'SEQUENCE' AS obj_type
  FROM pg_sequences
 UNION ALL
SELECT trigger_name AS obj_name
     , trigger_schema AS obj_schema
     , trigger_catalog AS obj_owner
     , 'TRIGGER' AS obj_type
  FROM information_schema.triggers
;
ALTER TABLE pg_objects
    OWNER TO postgres;
GRANT SELECT ON TABLE pg_objects TO PUBLIC;
GRANT ALL ON TABLE pg_objects TO postgres;
-- now you should be able to execute psql with unix user usim and be automatically connected to database usim.
-- show schemas
\dn
